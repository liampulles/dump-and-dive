// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package gen

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion7

// TODOServiceClient is the client API for TODOService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type TODOServiceClient interface {
	Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*EntityID, error)
}

type tODOServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewTODOServiceClient(cc grpc.ClientConnInterface) TODOServiceClient {
	return &tODOServiceClient{cc}
}

func (c *tODOServiceClient) Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*EntityID, error) {
	out := new(EntityID)
	err := c.cc.Invoke(ctx, "/todo_service.TODOService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TODOServiceServer is the server API for TODOService service.
// All implementations must embed UnimplementedTODOServiceServer
// for forward compatibility
type TODOServiceServer interface {
	Create(context.Context, *CreateRequest) (*EntityID, error)
	mustEmbedUnimplementedTODOServiceServer()
}

// UnimplementedTODOServiceServer must be embedded to have forward compatible implementations.
type UnimplementedTODOServiceServer struct {
}

func (UnimplementedTODOServiceServer) Create(context.Context, *CreateRequest) (*EntityID, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (UnimplementedTODOServiceServer) mustEmbedUnimplementedTODOServiceServer() {}

// UnsafeTODOServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to TODOServiceServer will
// result in compilation errors.
type UnsafeTODOServiceServer interface {
	mustEmbedUnimplementedTODOServiceServer()
}

func RegisterTODOServiceServer(s *grpc.Server, srv TODOServiceServer) {
	s.RegisterService(&_TODOService_serviceDesc, srv)
}

func _TODOService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TODOServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/todo_service.TODOService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TODOServiceServer).Create(ctx, req.(*CreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TODOService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "todo_service.TODOService",
	HandlerType: (*TODOServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _TODOService_Create_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "todo_service/todo_service.proto",
}
